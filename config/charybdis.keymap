#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define U_TAPPING_TERM 200

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    macros {
        wp1: wp1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N1 &kp N2 &kp N7>;
            label = "WP1";
        };

        wp2: wp2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp LS(T) &kp LS(B) &kp I &kp R &kp C &kp H &kp W &kp O &kp D &kp DLLR &kp N3 &kp RET>;
            label = "WP2";
        };

        wp3: wp3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp O &kp N &kp A &kp T &kp H &kp A &kp N &kp DOT &kp T &kp A &kp N &kp G &kp N2 &kp TAB>;
            label = "WP3";
        };

        wp4: wp4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N &kp T &kp E &kp N &kp DLLR &kp J &kp T &kp N1 &kp RET>;
            label = "WP4";
        };

        sw1: sw1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp PIPE &kp SPACE>;
            label = "SW1";
        };

        sw2: sw2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp MINUS &kp SPACE>;
            label = "SW2";
        };
    };

    behaviors {
        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 5>;

            tapping-term-ms = <200>;
        };

        td2: td2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 3>;

            tapping-term-ms = <200>;
        };

        td_bt0: td_bt0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BT0";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&bt BT_CLR>;
        };

        td_bt1: td_bt1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BT1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt BT_CLR>;
        };

        td_bt2: td_bt2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BT2";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&bt BT_CLR>;
        };

        td_bt3: td_bt3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BT3";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&bt BT_CLR>;
        };

        td_bt4: td_bt4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BT4";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&bt BT_CLR>;
        };

        td_tab_esc: td_tab_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TAB_ESC";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <200>;
        };

        td_minus_equal: td_minus_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MINUS_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp EQUAL>;

            tapping-term-ms = <200>;
        };

        tdF11: tdF11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TDF11";
            #binding-cells = <0>;
            bindings = <&kp F11>, <&kp LC(F11)>;
        };

        tdcopypaste: tdcopypaste {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOPYPASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(V)>;
        };

        tdpgup: tdpgup {
            compatible = "zmk,behavior-tap-dance";
            label = "TDPGUP";
            #binding-cells = <0>;
            bindings = <&kp LC(PG_DN)>, <&kp LC(PG_UP)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -------------------------------------------------------------------------------------------
            // |    TAB    |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U    |  I  |  O  |     P    | BKSP |
            // | CTRL/CAPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J    |  K  |  L  |  ;/SHFT  |  '   |
            // |   SHFT    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M    |  ,  |  .  |     /    | DEL  |
            //                         | ALT |  L1 | SPC |   | ENT | L2/L3 |

            bindings = <
&kp TAB             &kp Q  &kp W  &kp E   &kp R          &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P                     &kp BSPC
&mt LCTRL CAPSLOCK  &kp A  &kp S  &kp D   &kp F          &kp G        &kp H    &kp J  &kp K      &kp L    &mt LEFT_SHIFT SEMICOLON  &kp SQT
&kp LSHFT           &kp Z  &kp X  &kp C   &kp V          &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH                  &kp DEL
                                  &td1    &kp LEFT_ALT   &kp SPACE    &kp RET  &td2
            >;
        };

        WORK {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |   W   |  UP   | CTRL  | SCR UP |   |  /   |   7   |  8  |  9  |  -  | BKSP |
            // | ESC  |  A  |  LFT  |  DWN  |  RGHT | SCR DN |   |  *   |   4   |  5  |  6  |  +  |  =   |
            // | SHFT | ALT | PG_UP | PG_UP | LCK   |  RCK   |   |  0   |   1   |  2  |  3  |  .  | DEL  |
            //                      | "/GUI |   L0  |  SPC   |   | ENT  | L2/L3 |

            bindings = <
&trans   &trans        &trans     &kp UP_ARROW  &kp LG(LS(S))                       &tdpgup          &kp KP_SLASH     &kp N7  &kp N8  &kp N9  &kp MINUS    &trans
&kp ESC  &trans        &kp LEFT   &kp DOWN      &kp RIGHT                           &tdcopypaste     &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_PLUS  &kp EQUAL
&trans   &kp LEFT_ALT  &kp LCTRL  &mkp MB3      &mkp LCLK                           &mkp RCLK        &kp N0           &kp N1  &kp N2  &kp N3  &kp DOT      &trans
                                  &to 0         &mt LEFT_GUI DOUBLE_QUOTES          &trans           &trans           &td2
            >;
        };

        FUNCTION {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // |  F7  |  F8 |  F9 | F10 | F11 | F12 |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT | GUI | SPC |   | ENT | L0  |

            display-name = "FUNCTION";
            bindings = <
&kp ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp F1   &kp F2    &kp F3  &kp F4    &kp F5        &kp F6       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp F7   &kp F8    &kp F9  &kp F10   &tdF11        &kp F12      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                           &kp LALT  &kp LEFT_GUI  &kp SPACE    &kp RET    &to 0
            >;
        };

        BT {
            display-name = "BT";
            bindings = <
&to 0  &td_bt0  &td_bt1  &td_bt2     &td_bt3  &td_bt4        &wp1         &wp2   &wp3   &wp4   &to 0  &out OUT_TOG
&to 0  &to 0    &to 0    &to 0       &to 0    &bootloader    &bootloader  &to 4  &to 0  &to 0  &to 0  &to 0
&to 0  &to 0    &to 0    &to 0       &to 0    &to 0          &to 0        &to 0  &to 0  &to 0  &to 0  &to 0
                         &kp KP_NUM  &to 0    &to 0          &to 0        &mo 0
            >;
        };

        BG3 {
            bindings = <
&kp ESC  &kp TAB    &kp Q  &kp W     &kp E  &kp R        &kp LC(C)  &kp ESC    &none      &none  &none  &none
&kp J    &kp LCTRL  &kp A  &kp S     &kp D  &kp F        &kp LC(V)  &mkp LCLK  &mkp RCLK  &mo 5  &none  &none
&kp O    &kp LSHFT  &kp Z  &kp X     &kp C  &kp V        &kp T      &mkp MB3   &none      &none  &none  &none
                           &kp LALT  &kp M  &kp SPACE    &kp RET    &to 0
            >;
        };

        TransScroll {
            bindings = <
&trans   &trans  &trans     &trans   &trans   &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans     &trans   &trans   &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &kp LCTRL  &trans   &trans   &trans    &trans  &trans  &trans  &trans  &trans   &trans
                            &trans   &trans   &trans    &trans  &trans
            >;
        };

    };
};
